FileSource.loadAllCrontabEntry_1=未设置定时任务文件属性[lambo.schedule.data.file]！
FileSource.loadCrontabEntry_1=配置文件的字符集代码：
FileSource.storeAll_1=保存任务时配置文件的字符集代码： 
CrontabViewImpl.format1_1=任务\"
CrontabViewImpl.format1_2=已经暂停！
CrontabViewImpl.format1_3= 执行时间：
CrontabViewImpl.format1_4=月：
CrontabViewImpl.format1_5=周
CrontabViewImpl.format1_6=日：
CrontabViewImpl.format1_7=时：
CrontabViewImpl.format1_8=分：
CrontabViewImpl.format2_1=每
CrontabViewImpl.format2_2=六
CrontabViewImpl.format2_3=日
LoadCrontabServlet.doGet_1=<p>以下输出来自LoadCrontabServlet：</p>
LoadCrontabServlet.doGet_2=<p><font color='#3333'><b>LoadCrontabServlet 已经加载！</font></b></p>
LoadCrontabServlet.doGet_3=<p>定时器已经启动！</p>
LoadCrontabServlet.doGet_4=<p>定时器已经运行！</p>
CronTask.run_1=定时任务:{
CronTask.run_2="}执行时间：["
CronTask.run_3=]，任务执行成功，用时[
CronTask.run_4=]秒。
CronTask.run_5=}已经停止或被移除，不能运行！
CronTask.run_6=]，任务执行失败，请查看错误日志！
CronTaskImpl.runTask_1=定时任务{
CronTaskImpl.runTask_2=}执行Service型方法[
CronTaskImpl.runTask_3=}不存在方法[
CronTaskImpl.runTask_4=]假定任务类是一个实现了Runnable接口的类，实例化线程然后启动线程！
CronTaskImpl.runTask_5=}任务类没有响应参数的构造函数！
CronTaskImpl.runTask_6=}任务类启动线程！
CronTaskImpl.runTask_7=}执行方法[
CronTaskImpl.runTask_8=]结束！
CronTaskImpl.runTask_9=}执行失败：
Schedule.data.file=schedule-data